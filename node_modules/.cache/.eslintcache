[{"/home/user/internship/reactClone/TODO_on_React/src/index.js":"1","/home/user/internship/reactClone/TODO_on_React/src/App.js":"2","/home/user/internship/reactClone/TODO_on_React/src/constants.js":"3","/home/user/internship/reactClone/TODO_on_React/src/api/http.js":"4","/home/user/internship/reactClone/TODO_on_React/src/components/Error/Error.js":"5","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js":"6","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js":"7","/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js":"8","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js":"9","/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js":"10","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js":"11","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js":"12","/home/user/internship/reactClone/TODO_on_React/src/PrivateRoute.js":"13","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/Registration.js":"14","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignIn.js":"15","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignOut.js":"16"},{"size":760,"mtime":1659429720360,"results":"17","hashOfConfig":"18"},{"size":2668,"mtime":1659429458684,"results":"19","hashOfConfig":"18"},{"size":160,"mtime":1658388906384,"results":"20","hashOfConfig":"18"},{"size":1632,"mtime":1659429458684,"results":"21","hashOfConfig":"18"},{"size":859,"mtime":1659429458684,"results":"22","hashOfConfig":"18"},{"size":1384,"mtime":1659429458688,"results":"23","hashOfConfig":"18"},{"size":1263,"mtime":1659429458688,"results":"24","hashOfConfig":"18"},{"size":1399,"mtime":1658388583825,"results":"25","hashOfConfig":"18"},{"size":991,"mtime":1658388901948,"results":"26","hashOfConfig":"18"},{"size":549,"mtime":1659429458688,"results":"27","hashOfConfig":"18"},{"size":2933,"mtime":1659429458688,"results":"28","hashOfConfig":"18"},{"size":385,"mtime":1658249105580,"results":"29","hashOfConfig":"18"},{"size":252,"mtime":1659430086215,"results":"30","hashOfConfig":"18"},{"size":1461,"mtime":1659429458688,"results":"31","hashOfConfig":"18"},{"size":1545,"mtime":1659429458688,"results":"32","hashOfConfig":"18"},{"size":466,"mtime":1659429793871,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ron51e",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"41"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/internship/reactClone/TODO_on_React/src/index.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/App.js",["89","90"],[],"import { useState, useEffect } from \"react\";\nimport { FILTERS, SORT, NUM_TASK, FLIP_PAGE } from \"./constants.js\";\nimport { getTasks } from \"./api/http.js\";\nimport style from \"./App.module.css\";\n\nimport TodoInputForm from \"./components/TasksBox/TodoInputForm\";\nimport Filters from \"./components/Filters/Filters\";\nimport PagesButton from \"./components/Pagination/PagesButton\";\nimport TasksBox from \"./components/TasksBox/TasksBox\";\nimport Error from \"./components/Error/Error.js\";\nimport SignOut from \"./components/SignIn/SignOut.js\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(FILTERS.ALL);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(SORT.LAST);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    renderTask();\n  }, [filters, currentPage, sort]);\n\n  const renderTask = () => {\n    const login = localStorage.getItem('login')\n\n    getTasks(currentPage, filters, sort, login)\n      .then((response) => {\n        const countPage = Math.ceil(response.count / NUM_TASK);\n        setPagesCount(countPage);\n        if (currentPage > countPage) {\n          setCurrentPage(1);\n        }\n        setTasks(response.tasks);\n      })\n      .catch((response) => {\n        if (response) setIsError(true);\n      });\n  };\n\n  const changePageNext = (next) => {\n    switch (next) {\n      case true:\n        if (currentPage === pagesCount) {\n          break;\n        }\n        setCurrentPage(currentPage + 1);\n        break;\n      case false:\n        if (currentPage === 1) {\n          break;\n        }\n        setCurrentPage(currentPage - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeCurrentPage = (number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <main>\n      <div className={style.logo}>TODOTODOT</div>\n      {isError && <Error setIsError={setIsError} />}\n\n      <TodoInputForm renderTask={renderTask} setIsError={setIsError} />\n      <div className={style.container}>\n        <div>\n          <Filters\n            setFilter={setFilter}\n            setSort={setSort}\n            filters={filters}\n            sort={sort}\n          />\n          <TasksBox tasks={tasks} renderTask={renderTask} setIsError={setIsError} />\n\n          {pagesCount > 1 && (\n            <PagesButton\n              changePageNext={changePageNext}\n              pagesCount={pagesCount}\n              currentPage={currentPage}\n              changeCurrentPage={changeCurrentPage}\n            />\n          )}\n        </div>\n        <SignOut />\n      </div>\n\n    </main>\n  );\n}\nexport default App;\n",[],"/home/user/internship/reactClone/TODO_on_React/src/constants.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/api/http.js",["91"],[],"import axios from \"axios\";\n\nexport let errorMessage = \"\";\nexport let errorCode = \"\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n});\n\nconst axiosInstanceServer = axios.create({\n  baseURL: \"http://localhost:4000\",\n  headers: {\n    Authorization: localStorage.getItem(\"token\") ? `Bearer ${localStorage.getItem(\"token\")}` : \"\"\n  }\n});\n\naxiosInstanceServer.interceptors.response.use(\n  function (config) {\n    return config;\n  },\n  function (error) {\n    errorCode = error.response.status;\n    errorMessage = error.response.data.message;\n    return Promise.reject(error);\n  }\n);\n\nexport const getTasks = (currentPage, filter, sort, login) =>\n  axiosInstanceServer\n    .get(`/tasks`, {\n      params: { filterBy: filter, order: sort, pp: 5, page: currentPage, login: login },\n    })\n    .then((resp) => {\n      return resp.data;\n    });\n\nexport const postTask = (login, name) =>\n  axiosInstanceServer.post(`/tasks`, { name, login });\n\nexport const deleteTask = (uuid) =>\n  axiosInstanceServer.delete(`/tasks/${uuid}`);\n\nexport const changeTask = (uuid, newName) =>\n  axiosInstanceServer\n    .patch(`/tasks/${uuid}`, {\n      name: newName,\n    })\n    .then(() => {\n      return true;\n    });\n\nexport const checkPatchTask = (uuid, checkStatus) =>\n  axiosInstanceServer.patch(`/tasks/${uuid}`, {\n    done: !checkStatus,\n  });\n\n\nexport const postSignIn = (login, password) =>\n  axiosInstanceServer.post(`/signIn`, {\n    login,\n    password\n  });\n\n\nexport const postRegistration = (login, password) =>\n  axiosInstanceServer.post(`/registration`, {\n    login,\n    password\n  });\n\n","/home/user/internship/reactClone/TODO_on_React/src/components/Error/Error.js",["92"],[],"import style from \"./Error.module.css\";\nimport { errorMessage, errorCode } from \"../../api/http.js\";\nimport { useState } from \"react\";\n\nconst Error = ({ setIsError }) => {\n\n  let timer = 100\n\n  const timeError = () => {\n    if (timer > 0) document.getElementsByClassName(style.timeLine)[0].style.width = `${timer}%`;\n    if (timer <= -5) {\n      setIsError(false);\n      clearInterval(interval)\n    }\n\n    timer = timer - 1\n  }\n\n  const interval = setInterval(timeError, 100);\n\n  return (\n    <main className={style.mainContainer}>\n      <div className={style.nameContainer}>\n        <div className={style.nameError}>ERROR {errorCode}!</div>\n      </div>\n\n      <div className={style.bodyError}>\n        <div className={style.textError}>{errorMessage}</div>\n      </div>\n      <div className={style.timeLine}></div>\n    </main>\n  );\n};\n\nexport default Error;\n","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js",["93"],[],"import React from \"react\";\nimport style from \"./TasksBox.module.css\";\nimport { validateInputTodo } from \"../../utils/utils.js\";\nimport { changeTask } from \"../../api/http.js\";\n\nfunction Task({\n  task,\n  tasks,\n  removeTask,\n  checkTask,\n  userInput,\n  setUserInput,\n  renderTask,\n  setIsError,\n  statusInput,\n  setStatusInput,\n}) {\n  const handleChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const changeStatusInput = () => {\n    setUserInput(task.name);\n    setStatusInput({ idTask: task.uuid, status: true });\n  };\n\n  const blurInput = () => {\n    setStatusInput({ idTask: task.uuid, status: false });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = userInput.trim();\n    if (!validateInputTodo(name)) {\n      setStatusInput({ idTask: task.uuid, status: false });\n      return;\n    }\n    if (name) {\n      changeTask(task.uuid, name)\n        .then(() => {\n          renderTask();\n        })\n        .catch(() => {\n          setIsError(true);\n          renderTask();\n        });\n      tasks.find((item) => {\n        if (item.uuid === task.uuid) {\n          item.name = name;\n          return true;\n        }\n      });\n    }\n    setStatusInput({ idTask: task.uuid, status: false });\n  };\n\n  const handleKeyPress = (event) => {\n    switch (event.key) {\n      case \"Enter\":\n        handleSubmit(event);\n        break;\n      case \"Escape\":\n        setStatusInput({ idTask: task.uuid, status: false });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div key={task.uuid} className={task.done ? (style.task__checked) : (style.task)}>\n      <div className={style.task__inputs}>\n        <section className={style.task__left}>\n          <label className={style.task__check}>\n            <input\n\n              defaultChecked={task.done}\n              onClick={() => checkTask(task.uuid, task.done)}\n              type=\"checkbox\"\n            />\n            <span>Indigo</span>\n          </label>\n          <div className={style.task__containerText}>\n            {statusInput.idTask === task.uuid && statusInput.status ? (\n              <input\n                className={style.editTask}\n                autoFocus\n                onBlur={() => blurInput()}\n                onKeyDown={handleKeyPress}\n                value={userInput}\n                onChange={handleChange}\n                type=\"text\"\n              />\n            ) : (\n              <div\n                className={style.task__text}\n                uuid={task.uuid}\n                onDoubleClick={changeStatusInput}\n              >\n                {task.name}\n              </div>\n            )}\n            <div className={style.task__date}>{task.updatedAt}</div>\n          </div>\n\n        </section>\n        <button\n          className={style.task__btnDelete}\n          onClick={() => removeTask(task.uuid)}\n        >\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Task;\n","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/PrivateRoute.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/Registration.js",["94"],[],"import style from \"./SignIn.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { postRegistration } from \"../../api/http\"\n\nfunction Registration() {\n\n    const [loginInput, setLoginInput] = useState('')\n    const [passwordInput, setPasswordInput] = useState('')\n\n    const verify = async () => {\n        const login = loginInput.trim()\n        const password = passwordInput.trim()\n\n        const token = await postRegistration(login, password)\n        if (!token) return\n        localStorage.setItem('token', token.data)\n        localStorage.setItem('login', login)\n        document.location.href = \"/app\";\n    }\n\n    const changeLoginInput = (event) => {\n        setLoginInput(event.currentTarget.value);\n    };\n\n    const changePasswordInput = (event) => {\n        setPasswordInput(event.currentTarget.value);\n    };\n\n    return (\n\n        <div className={style.container}>\n            <div className={style.logo}>TODOTODOT</div>\n            <input className={style.input} placeholder=\"login\" value={loginInput} onChange={changeLoginInput} />\n            <input className={style.input} placeholder=\"password\" value={passwordInput} onChange={changePasswordInput} type=\"password\" />\n            <button className={style.btnMain} onClick={() => { verify() }}>sign up</button>\n            <button className={style.btnSign} onClick={() => { document.location.href = \"/signin\" }}>sign in</button>\n        </div>\n    );\n}\n\nexport default Registration;","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignIn.js",["95","96"],[],"import style from \"./SignIn.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { postSignIn } from \"../../api/http\"\nimport { Link } from \"react-router-dom\";\n\nfunction SignIn() {\n    const [loginInput, setLoginInput] = useState('')\n    const [passwordInput, setPasswordInput] = useState('')\n\n    const verify = async () => {\n        const login = loginInput.trim()\n        const password = passwordInput.trim()\n\n\n        const token = await postSignIn(login, password)\n        if (!token) return\n        localStorage.setItem('token', token.data)\n        localStorage.setItem('login', login)\n        document.location.href = \"/app\";\n    }\n\n    const changeLoginInput = (event) => {\n        setLoginInput(event.currentTarget.value);\n    };\n\n    const changePasswordInput = (event) => {\n        setPasswordInput(event.currentTarget.value);\n    };\n\n\n    return (\n        <div>\n\n            <div className={style.container}>\n                <div className={style.logo}>TODOTODOT</div>\n                <input className={style.input} placeholder=\"login\" value={loginInput} onChange={changeLoginInput} />\n                <input className={style.input} placeholder=\"password\" value={passwordInput} onChange={changePasswordInput} type=\"password\" />\n                <button className={style.btnMain} onClick={() => { verify() }}>sign in</button>\n                <button className={style.btnSign} onClick={() => { document.location.href = \"/Registration\" }}>sign up</button>\n            </div>\n\n\n        </div>\n\n    );\n}\n\nexport default SignIn;","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignOut.js",[],[],{"ruleId":"97","severity":1,"message":"98","line":2,"column":35,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"101","severity":1,"message":"102","line":23,"column":6,"nodeType":"103","endLine":23,"endColumn":34,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":7,"column":7,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"97","severity":1,"message":"106","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":47,"column":25,"nodeType":"109","messageId":"110","endLine":47,"endColumn":27},{"ruleId":"97","severity":1,"message":"111","line":2,"column":20,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"111","line":2,"column":20,"nodeType":"99","messageId":"100","endLine":2,"endColumn":29},{"ruleId":"97","severity":1,"message":"112","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},"no-unused-vars","'FLIP_PAGE' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderTask'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'axiosInstance' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'Link' is defined but never used.",{"desc":"114","fix":"115"},"Update the dependencies array to be: [filters, currentPage, sort, renderTask]",{"range":"116","text":"117"},[891,919],"[filters, currentPage, sort, renderTask]"]