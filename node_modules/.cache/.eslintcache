[{"/home/user/internship/reactClone/TODO_on_React/src/index.js":"1","/home/user/internship/reactClone/TODO_on_React/src/App.js":"2","/home/user/internship/reactClone/TODO_on_React/src/constants.js":"3","/home/user/internship/reactClone/TODO_on_React/src/api/http.js":"4","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js":"5","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js":"6","/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js":"7","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js":"8","/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js":"9","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js":"10","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js":"11"},{"size":254,"mtime":1657873556006,"results":"12","hashOfConfig":"13"},{"size":2464,"mtime":1658213938824,"results":"14","hashOfConfig":"15"},{"size":144,"mtime":1658155297199,"results":"16","hashOfConfig":"13"},{"size":740,"mtime":1658157533025,"results":"17","hashOfConfig":"13"},{"size":1354,"mtime":1658155297199,"results":"18","hashOfConfig":"13"},{"size":1024,"mtime":1658155297199,"results":"19","hashOfConfig":"13"},{"size":2311,"mtime":1658155297199,"results":"20","hashOfConfig":"13"},{"size":979,"mtime":1657873556006,"results":"21","hashOfConfig":"13"},{"size":405,"mtime":1658155297199,"results":"22","hashOfConfig":"13"},{"size":2299,"mtime":1658155297199,"results":"23","hashOfConfig":"13"},{"size":385,"mtime":1657873556006,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uvh5zq",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ron51e",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/internship/reactClone/TODO_on_React/src/index.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/App.js",["60","61","62"],[],"/home/user/internship/reactClone/TODO_on_React/src/constants.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/api/http.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js",["63"],[],"import { useEffect } from \"react\";\nimport { FILTERS, SORT } from \"../../constants.js\";\nimport style from \"./Filters.module.css\";\n\nfunction Filters({\n  setFilter,\n  setSort,\n  setFiltredArray,\n  setPagesCount,\n  filters,\n  tasks,\n  sort,\n  filtredArray,\n}) {\n  const onFilter = (filter) => {\n    setFilter(filter);\n  };\n\n  const onSort = (sort) => {\n    setSort(sort);\n  };\n\n  useEffect(() => {\n    switch (filters) {\n      case 0:\n        setFiltredArray(\n          [...tasks].sort((prev, next) =>\n            !sort ? prev.uuid - next.uuid : next.uuid - prev.uuid\n          )\n        );\n        break;\n\n      case 1:\n        setFiltredArray(\n          tasks\n            .filter((task) => task.done)\n            .sort((prev, next) =>\n              !sort ? prev.uuid - next.uuid : next.uuid - prev.uuid\n            )\n        );\n        break;\n\n      default:\n        setFiltredArray(\n          tasks\n            .filter((task) => task.done !== true)\n            .sort((prev, next) =>\n              !sort ? prev.uuid - next.uuid : next.uuid - prev.uuid\n            )\n        );\n        break;\n    }\n  }, [filters, sort, tasks]);\n\n  // useEffect(() => {\n  //   setPagesCount(2);\n  // }, [filtredArray, filters]);\n\n  return (\n    <section className={style.filterBox}>\n      <div className={style.filterBox__filter}>\n        <button\n          aria-pressed={filters === 0}\n          onClick={() => {\n            onFilter(FILTERS.ALL);\n          }}\n        >\n          All\n        </button>\n        <button\n          aria-pressed={filters === 1}\n          onClick={() => {\n            onFilter(FILTERS.DONE);\n          }}\n        >\n          Done\n        </button>\n        <button\n          aria-pressed={filters === 2}\n          onClick={() => {\n            onFilter(FILTERS.UNDONE);\n          }}\n        >\n          Undone\n        </button>\n      </div>\n      <div className={style.filterBox__sorting}>\n        <span>Sort by Date</span>\n        <button\n          aria-pressed={sort}\n          onClick={() => {\n            onSort(SORT.EARLY);\n          }}\n        >\n          Ear\n        </button>\n        <button\n          aria-pressed={!sort}\n          onClick={() => {\n            onSort(SORT.LAST);\n          }}\n        >\n          Las\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default Filters;\n","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js",["64"],[],"import React from \"react\";\nimport { useState } from \"react\";\nimport { validateInputTodo } from \"../../utils/utils.js\";\nimport style from \"./TasksBox.module.css\";\n\nfunction Task({ task, removeTask, checkTask, tasks, userInput, setUserInput }) {\n  const [statusInput, setStatusInput] = useState(false);\n\n  const handleChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const changeStatusInput = () => {\n    setUserInput(task.name);\n    setStatusInput(true);\n  };\n\n  const blurInput = () => {\n    setStatusInput(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = userInput.trim();\n    if (!validateInputTodo(name)) {\n      setStatusInput(false);\n      return;\n    }\n    if (name) {\n      tasks.find((item) => {\n        if (item.uuid === task.uuid) {\n          item.name = name;\n          return true;\n        }\n      });\n    }\n\n    setStatusInput(false);\n  };\n\n  const handleKeyPress = (event) => {\n    switch (event.key) {\n      case \"Enter\":\n        handleSubmit(event);\n        break;\n      case \"Escape\":\n        setStatusInput(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div key={task.uuid} className={style.task}>\n      <div className={style.task__inputs}>\n        <section className={style.task__left}>\n          <input\n            className={style.task__check}\n            defaultChecked={task.done}\n            onClick={() => checkTask(task.userId)}\n            type=\"checkbox\"\n          />\n          {statusInput ? (\n            <input\n              className={style.editTask}\n              autoFocus\n              onBlur={blurInput}\n              onKeyDown={handleKeyPress}\n              value={userInput}\n              onChange={handleChange}\n              type=\"text\"\n            />\n          ) : (\n            <div\n              className={style.task__text}\n              uuid={task.uuid}\n              onDoubleClick={changeStatusInput}\n            >\n              {task.name}\n            </div>\n          )}\n        </section>\n        <button\n          className={style.task__btnDelete}\n          onClick={() => removeTask(task.uuid)}\n        >\n          del\n        </button>\n      </div>\n\n      <div className={style.task__date}>{task.date}</div>\n    </div>\n  );\n}\n\nexport default Task;\n","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":24,"column":6,"nodeType":"67","endLine":24,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":37,"column":6,"nodeType":"67","endLine":37,"endColumn":18,"suggestions":"70"},{"ruleId":"65","severity":1,"message":"66","line":41,"column":6,"nodeType":"67","endLine":41,"endColumn":19,"suggestions":"71"},{"ruleId":"65","severity":1,"message":"72","line":53,"column":6,"nodeType":"67","endLine":53,"endColumn":28,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":30,"column":25,"nodeType":"76","messageId":"77","endLine":30,"endColumn":27},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderTask'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["79"],["80"],"React Hook useEffect has a missing dependency: 'setFiltredArray'. Either include it or remove the dependency array. If 'setFiltredArray' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["81"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [renderTask]",{"range":"90","text":"91"},"Update the dependencies array to be: [currentPage, pagesCount]",{"range":"92","text":"93"},"Update the dependencies array to be: [currentPage, renderTask]",{"range":"94","text":"95"},"Update the dependencies array to be: [filters, setFiltredArray, sort, tasks]",{"range":"96","text":"97"},[798,800],"[renderTask]",[1077,1089],"[currentPage, pagesCount]",[1136,1149],"[currentPage, renderTask]",[1101,1123],"[filters, setFiltredArray, sort, tasks]"]