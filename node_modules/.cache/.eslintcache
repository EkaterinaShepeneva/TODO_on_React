[{"/home/user/internship/reactClone/TODO_on_React/src/index.js":"1","/home/user/internship/reactClone/TODO_on_React/src/App.js":"2","/home/user/internship/reactClone/TODO_on_React/src/constants.js":"3","/home/user/internship/reactClone/TODO_on_React/src/api/http.js":"4","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js":"5","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js":"6","/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js":"7","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js":"8","/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js":"9","/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js":"10","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js":"11","/home/user/internship/reactClone/TODO_on_React/src/PrivateRoute.js":"12","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignOut.js":"13","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInInput.js":"14","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInForm.js":"15","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInBtn.js":"16","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignUpBtn.js":"17"},{"size":584,"mtime":1659515027073,"results":"18","hashOfConfig":"19"},{"size":2682,"mtime":1659532446851,"results":"20","hashOfConfig":"19"},{"size":160,"mtime":1658388906384,"results":"21","hashOfConfig":"19"},{"size":1893,"mtime":1659533030274,"results":"22","hashOfConfig":"19"},{"size":1274,"mtime":1659529999076,"results":"23","hashOfConfig":"19"},{"size":1159,"mtime":1659529960792,"results":"24","hashOfConfig":"19"},{"size":1399,"mtime":1658388583825,"results":"25","hashOfConfig":"19"},{"size":991,"mtime":1658388901948,"results":"26","hashOfConfig":"19"},{"size":378,"mtime":1659430703729,"results":"27","hashOfConfig":"19"},{"size":2891,"mtime":1659529977332,"results":"28","hashOfConfig":"19"},{"size":385,"mtime":1658249105580,"results":"29","hashOfConfig":"19"},{"size":239,"mtime":1659514349718,"results":"30","hashOfConfig":"19"},{"size":541,"mtime":1659531421462,"results":"31","hashOfConfig":"19"},{"size":348,"mtime":1659528548363,"results":"32","hashOfConfig":"19"},{"size":3372,"mtime":1659531480902,"results":"33","hashOfConfig":"19"},{"size":394,"mtime":1659522801086,"results":"34","hashOfConfig":"19"},{"size":394,"mtime":1659514863758,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"ron51e",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/user/internship/reactClone/TODO_on_React/src/index.js",[],[],[],"/home/user/internship/reactClone/TODO_on_React/src/App.js",["91"],[],"import { useState, useEffect } from \"react\";\nimport { FILTERS, SORT, NUM_TASK } from \"./constants.js\";\nimport { getTasks } from \"./api/http.js\";\nimport style from \"./App.module.css\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TodoInputForm from \"./components/TasksBox/TodoInputForm\";\nimport Filters from \"./components/Filters/Filters\";\nimport PagesButton from \"./components/Pagination/PagesButton\";\nimport TasksBox from \"./components/TasksBox/TasksBox\";\nimport SignOut from \"./components/SignIn/SignOut.js\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(FILTERS.ALL);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(SORT.LAST);\n\n  useEffect(() => {\n    renderTask();\n  }, [filters, currentPage, sort]);\n\n  const renderTask = () => {\n\n    getTasks(currentPage, filters, sort)\n      .then((response) => {\n        const countPage = Math.ceil(response.data.count / NUM_TASK);\n        setPagesCount(countPage);\n        if (currentPage > countPage) {\n          setCurrentPage(1);\n        }\n        setTasks(response.data.tasks);\n      })\n  };\n\n  const changePageNext = (next) => {\n    switch (next) {\n      case true:\n        if (currentPage === pagesCount) {\n          break;\n        }\n        setCurrentPage(currentPage + 1);\n        break;\n      case false:\n        if (currentPage === 1) {\n          break;\n        }\n        setCurrentPage(currentPage - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeCurrentPage = (number) => {\n    setCurrentPage(number);\n  };\n\n  return (\n    <main>\n      <div className={style.logo}>TODOTODOT</div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n\n      />\n\n      <TodoInputForm renderTask={renderTask} />\n      <div className={style.container}>\n        <div>\n          <Filters\n            setFilter={setFilter}\n            setSort={setSort}\n            filters={filters}\n            sort={sort}\n          />\n          <TasksBox tasks={tasks} renderTask={renderTask} />\n\n          {pagesCount > 1 && (\n            <PagesButton\n              changePageNext={changePageNext}\n              pagesCount={pagesCount}\n              currentPage={currentPage}\n              changeCurrentPage={changeCurrentPage}\n            />\n          )}\n        </div>\n        <SignOut />\n      </div>\n\n    </main>\n  );\n}\nexport default App;\n","/home/user/internship/reactClone/TODO_on_React/src/constants.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/api/http.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TasksBox.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/Filters/Filters.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/PagesButton.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/utils/utils.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/Task.js",["92"],[],"import React from \"react\";\nimport style from \"./TasksBox.module.css\";\nimport { validateInputTodo } from \"../../utils/utils.js\";\nimport { changeTask } from \"../../api/http.js\";\n\nfunction Task({\n  task,\n  tasks,\n  removeTask,\n  checkTask,\n  userInput,\n  setUserInput,\n  renderTask,\n  statusInput,\n  setStatusInput,\n}) {\n  const handleChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const changeStatusInput = () => {\n    setUserInput(task.name);\n    setStatusInput({ idTask: task.uuid, status: true });\n  };\n\n  const blurInput = () => {\n    setStatusInput({ idTask: task.uuid, status: false });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = userInput.trim();\n    if (!validateInputTodo(name)) {\n      setStatusInput({ idTask: task.uuid, status: false });\n      return;\n    }\n    if (name) {\n      changeTask(task.uuid, name)\n        .then(() => {\n          renderTask();\n        })\n        .catch(() => {\n          renderTask();\n        });\n      tasks.find((item) => {\n        if (item.uuid === task.uuid) {\n          item.name = name;\n          return true;\n        }\n      });\n    }\n    setStatusInput({ idTask: task.uuid, status: false });\n  };\n\n  const handleKeyPress = (event) => {\n    switch (event.key) {\n      case \"Enter\":\n        handleSubmit(event);\n        break;\n      case \"Escape\":\n        setStatusInput({ idTask: task.uuid, status: false });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div key={task.uuid} className={task.done ? (style.task__checked) : (style.task)}>\n      <div className={style.task__inputs}>\n        <section className={style.task__left}>\n          <label className={style.task__check}>\n            <input\n\n              defaultChecked={task.done}\n              onClick={() => checkTask(task.uuid, task.done)}\n              type=\"checkbox\"\n            />\n            <span>Indigo</span>\n          </label>\n          <div className={style.task__containerText}>\n            {statusInput.idTask === task.uuid && statusInput.status ? (\n              <input\n                className={style.editTask}\n                autoFocus\n                onBlur={() => blurInput()}\n                onKeyDown={handleKeyPress}\n                value={userInput}\n                onChange={handleChange}\n                type=\"text\"\n              />\n            ) : (\n              <div\n                className={style.task__text}\n                uuid={task.uuid}\n                onDoubleClick={changeStatusInput}\n              >\n                {task.name}\n              </div>\n            )}\n            <div className={style.task__date}>{task.updatedAt}</div>\n          </div>\n\n        </section>\n        <button\n          className={style.task__btnDelete}\n          onClick={() => removeTask(task.uuid)}\n        >\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Task;\n","/home/user/internship/reactClone/TODO_on_React/src/components/Pagination/Pagination.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/PrivateRoute.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignOut.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInInput.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInForm.js",["93"],[],"import style from \"./SignIn.module.css\";\nimport { useState, useEffect } from \"react\";\nimport { postSignIn } from \"../../api/http\"\nimport SignInInput from \"./SignInInput\";\nimport { postRegistration } from \"../../api/http\"\nimport SignInBtn from \"./SignInBtn.js\";\nimport SignUpBtn from \"./SignUpBtn\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction SignInForm() {\n\n    const [loginInput, setLoginInput] = useState('')\n    const [passwordInput, setPasswordInput] = useState('')\n    const [currentSection, setCurrentSection] = useState('signIn')\n    let navigate = useNavigate();\n\n    const verify = async () => {\n        const login = loginInput.trim()\n        const password = passwordInput.trim()\n\n        const response = await postSignIn(login, password)\n        if (!response) return\n        localStorage.setItem('token', response.data.token)\n        localStorage.setItem('login', loginInput)\n        navigate(\"../app\", { replace: true });\n    }\n\n    const signUp = async () => {\n        const login = loginInput.trim()\n        const password = passwordInput.trim()\n\n        const response = await postRegistration(login, password)\n        if (!response) return\n        localStorage.setItem('token', response.data.token)\n        localStorage.setItem('login', loginInput)\n        navigate(\"../app\", { replace: true });\n    }\n\n    const handleKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            if (currentSection === 'signIn') verify()\n            if (currentSection === 'signUp') signUp()\n        }\n    };\n\n    const movingSection = (section) => {\n        setPasswordInput('')\n        setLoginInput('')\n        setCurrentSection(section)\n    }\n\n    const changeLoginInput = (event) => {\n        setLoginInput(event.currentTarget.value);\n    };\n\n    const changePasswordInput = (event) => {\n        setPasswordInput(event.currentTarget.value);\n    };\n\n    return (\n        <div>\n\n            <div className={style.container}>\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n                <div className={style.logo}>TODOTODOT</div>\n                <SignInInput\n                    handleKeyPress={handleKeyPress}\n                    input={loginInput}\n                    changeInput={changeLoginInput}\n                    typeInput='input'\n                    placeholder='login' />\n                <SignInInput\n                    handleKeyPress={handleKeyPress}\n                    input={passwordInput}\n                    changeInput={changePasswordInput}\n                    typeInput='password'\n                    placeholder='password' />\n                {(currentSection === 'signIn') ? (<SignInBtn\n                    verify={verify}\n                    movingSection={movingSection}\n                />) : (<SignUpBtn\n                    signUp={signUp}\n                    movingSection={movingSection}\n                />)}\n\n\n\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default SignInForm;","/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignInBtn.js",[],[],"/home/user/internship/reactClone/TODO_on_React/src/components/SignIn/SignUpBtn.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":23,"column":6,"nodeType":"96","endLine":23,"endColumn":34,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":45,"column":25,"nodeType":"100","messageId":"101","endLine":45,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":2,"column":20,"nodeType":"104","messageId":"105","endLine":2,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderTask'. Either include it or remove the dependency array.","ArrayExpression",["106"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"107","fix":"108"},"Update the dependencies array to be: [filters, currentPage, sort, renderTask]",{"range":"109","text":"110"},[879,907],"[filters, currentPage, sort, renderTask]"]