{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const NUM_TASK = 4;\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(\"filter__all\");\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(\"sort__last\");\n\n  const handleFilter = filter => {\n    setFilter(filter);\n  };\n\n  const handleSort = sort => {\n    setSort(sort);\n  };\n\n  const handlePage = event => {\n    console.log(event.target.className);\n\n    switch (event.target.className) {\n      case 'pagination__forward':\n        if (page === pagesCount) {\n          break;\n        }\n\n        ;\n        setPages(page + 1);\n        break;\n\n      case 'pagination__back':\n        if (page === 1) {\n          break;\n        }\n\n        ;\n        setPages(page - 1);\n        ;\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const pagination = () => {\n    let arrayPages = [];\n\n    for (let i = 1; i < pagesCount + 1; i++) {\n      arrayPages.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: i === page ? 'pagination__pages__number activePages' : 'pagination__pages__number',\n        children: i\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }, this));\n    }\n\n    return arrayPages;\n  };\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      };\n      setTasks(tasks => [...tasks, newTask]);\n    }\n\n    setPagesCount(Math.ceil((tasks.length + 1) / 4) || 1);\n  };\n\n  const removeTask = id => setTasks(tasks.filter(task => task.id !== id));\n\n  const checkTask = task => task.check = !task.check;\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilter: handleFilter,\n      onSort: handleSort,\n      filters: filters,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksBox\",\n      children: tasks.filter(task => filters === \"filter__all\" ? tasks : filters === \"filter__done\" ? task.check === true : task.check !== true).sort((prev, next) => sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id).slice((page - 1) * NUM_TASK, NUM_TASK * page).map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          removeTask: removeTask,\n          checkTask: checkTask,\n          tasks: tasks,\n          page: page\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination__back\",\n        onClick: event => {\n          handlePage(event);\n        },\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__pages\",\n        children: pagination()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination__forward\",\n        onClick: event => {\n          handlePage(event);\n        },\n        children: \"forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ft+ZskHQ+7HItg6w8bNg8sS9mTA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Task","TodoForm","Filters","moment","App","NUM_TASK","tasks","setTasks","filters","setFilter","page","setPages","pagesCount","setPagesCount","sort","setSort","handleFilter","filter","handleSort","handlePage","event","console","log","target","className","pagination","arrayPages","i","push","Math","random","addTask","userInput","newTask","title","id","Date","now","check","date","format","ceil","length","removeTask","task","checkTask","prev","next","slice","map"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport moment from \"moment\";\n\nfunction App() {\n  const NUM_TASK = 4;\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(\"filter__all\");\n  const [page, setPages] = useState(1); \n  const [pagesCount, setPagesCount] = useState(1)\n  const [sort, setSort] = useState(\"sort__last\");\n\n  const handleFilter = (filter) => {\n    setFilter(filter);\n  };\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n  const handlePage = (event) => {\n    console.log(event.target.className);\n\n    switch (event.target.className){\n      case 'pagination__forward':\n          if ((page === pagesCount)) {   \n              break;\n              };\n              setPages(page+1);\n          break;\n      case 'pagination__back':\n          if ((page === 1)) {   \n              break;\n              };\n              setPages(page-1);;\n          break;\n      default:\n        break\n              \n  }\n  };\n\n  const pagination = () => {\n    let arrayPages = []\n    for (let i = 1; i < pagesCount+1; i++) {\n      arrayPages.push(<div key={Math.random()} className={(i===page)?('pagination__pages__number activePages'):('pagination__pages__number')}>{i}</div>)\n    }\n    return(arrayPages)\n  }\n\n  const addTask = (userInput) => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\"),\n      };\n\n      setTasks(tasks => [...tasks, newTask]);\n    }      \n\n      setPagesCount((Math.ceil((tasks.length+1)/4)|| 1));\n  };\n\n  const removeTask = (id) => setTasks(tasks.filter((task) => task.id !== id));\n\n  const checkTask = (task) => (task.check = !task.check);\n\n  return (\n    <main>\n      <h1>ToDo</h1>\n      <TodoForm addTask={addTask} />\n      <Filters\n        onFilter={handleFilter}\n        onSort={handleSort}\n        filters={filters}\n        sort={sort}\n      />\n      <div className=\"tasksBox\">\n        {tasks\n          .filter((task) =>\n            filters === \"filter__all\"\n              ? tasks\n              : filters === \"filter__done\"\n              ? task.check === true\n              : task.check !== true\n          )\n          .sort((prev, next) =>\n            sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id\n          )\n          .slice((page - 1) * NUM_TASK, NUM_TASK * page)\n          .map((task) => {\n            return (\n              <Task\n                task={task}\n                key={task.id}\n                removeTask={removeTask}\n                checkTask={checkTask}\n                tasks={tasks}\n                page={page}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"pagination\" >\n        <button className=\"pagination__back\" onClick={(event) => {handlePage(event)}}>back</button>\n        <div className=\"pagination__pages\">\n          {pagination()}\n        </div>\n        <button className=\"pagination__forward\" onClick={(event) => {handlePage(event)}}>forward</button>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}