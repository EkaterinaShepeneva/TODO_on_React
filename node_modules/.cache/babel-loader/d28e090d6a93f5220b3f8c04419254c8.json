{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport style from \"./TasksBox.module.css\";\nimport { validateInputTodo } from \"../../utils/utils.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoInputForm(_ref) {\n  _s();\n\n  let {\n    setTasks,\n    tasks\n  } = _ref;\n  const [userInput, setUserInput] = useState(\"\");\n\n  const changeInput = event => {\n    setUserInput(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    const title = userInput.trim();\n    event.preventDefault();\n    addTask(title);\n    setUserInput(\"\");\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSubmit(event);\n    }\n  };\n\n  const addTask = userInput => {\n    if (!validateInputTodo(userInput)) return;\n\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"LLLL\")\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.inputBox,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      className: style.inputBox__input,\n      value: userInput,\n      type: \"text\",\n      onChange: changeInput,\n      onKeyDown: handleKeyPress,\n      placeholder: \"Write something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoInputForm, \"5m2DpaTPYgx4BaqjxYL18HEa8GU=\");\n\n_c = TodoInputForm;\nexport default TodoInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInputForm\");","map":{"version":3,"names":["useState","moment","style","validateInputTodo","TodoInputForm","setTasks","tasks","userInput","setUserInput","changeInput","event","currentTarget","value","handleSubmit","title","trim","preventDefault","addTask","handleKeyPress","key","newTask","id","Date","now","check","date","format","inputBox","inputBox__input"],"sources":["/home/user/internship/reactClone/TODO_on_React/src/components/TasksBox/TodoInputForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport moment from \"moment\";\nimport style from \"./TasksBox.module.css\";\nimport { validateInputTodo } from \"../../utils/utils.js\";\n\nfunction TodoInputForm({ setTasks, tasks }) {\n  const [userInput, setUserInput] = useState(\"\");\n\n  const changeInput = (event) => {\n    setUserInput(event.currentTarget.value);\n  };\n\n  const handleSubmit = (event) => {\n    const title = userInput.trim();\n    event.preventDefault();\n    addTask(title);\n    setUserInput(\"\");\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSubmit(event);\n    }\n  };\n\n  const addTask = (userInput) => {\n    if (!validateInputTodo(userInput)) return;\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"LLLL\"),\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  return (\n    <form className={style.inputBox} onSubmit={handleSubmit}>\n      <input\n        autoFocus\n        className={style.inputBox__input}\n        value={userInput}\n        type=\"text\"\n        onChange={changeInput}\n        onKeyDown={handleKeyPress}\n        placeholder=\"Write something...\"\n      />\n      <button>+</button>\n    </form>\n  );\n}\n\nexport default TodoInputForm;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;;AAEA,SAASC,aAAT,OAA4C;EAAA;;EAAA,IAArB;IAAEC,QAAF;IAAYC;EAAZ,CAAqB;EAC1C,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMS,WAAW,GAAIC,KAAD,IAAW;IAC7BF,YAAY,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAZ;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAIH,KAAD,IAAW;IAC9B,MAAMI,KAAK,GAAGP,SAAS,CAACQ,IAAV,EAAd;IACAL,KAAK,CAACM,cAAN;IACAC,OAAO,CAACH,KAAD,CAAP;IACAN,YAAY,CAAC,EAAD,CAAZ;EACD,CALD;;EAOA,MAAMU,cAAc,GAAIR,KAAD,IAAW;IAChC,IAAIA,KAAK,CAACS,GAAN,KAAc,OAAlB,EAA2B;MACzBN,YAAY,CAACH,KAAD,CAAZ;IACD;EACF,CAJD;;EAMA,MAAMO,OAAO,GAAIV,SAAD,IAAe;IAC7B,IAAI,CAACJ,iBAAiB,CAACI,SAAD,CAAtB,EAAmC;;IACnC,IAAIA,SAAJ,EAAe;MACb,MAAMa,OAAO,GAAG;QACdN,KAAK,EAAEP,SADO;QAEdc,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFU;QAGdC,KAAK,EAAE,KAHO;QAIdC,IAAI,EAAExB,MAAM,GAAGyB,MAAT,CAAgB,MAAhB;MAJQ,CAAhB;MAMArB,QAAQ,CAAC,CAAC,GAAGC,KAAJ,EAAWc,OAAX,CAAD,CAAR;IACD;EACF,CAXD;;EAaA,oBACE;IAAM,SAAS,EAAElB,KAAK,CAACyB,QAAvB;IAAiC,QAAQ,EAAEd,YAA3C;IAAA,wBACE;MACE,SAAS,MADX;MAEE,SAAS,EAAEX,KAAK,CAAC0B,eAFnB;MAGE,KAAK,EAAErB,SAHT;MAIE,IAAI,EAAC,MAJP;MAKE,QAAQ,EAAEE,WALZ;MAME,SAAS,EAAES,cANb;MAOE,WAAW,EAAC;IAPd;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA/CQd,a;;KAAAA,a;AAiDT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}