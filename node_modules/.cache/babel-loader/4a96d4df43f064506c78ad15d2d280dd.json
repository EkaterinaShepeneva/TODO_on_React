{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tasksArray = [];\n\nfunction App() {\n  _s();\n\n  const [tasksRender, setRender] = useState([]);\n  console.log('hj');\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      };\n      tasksArray.push(newTask);\n      setRender([tasksArray]);\n      console.log(tasksArray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), tasksRender.map(task => {\n      /*#__PURE__*/\n      _jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wji+YP/l5VmjuzMsQJYzjr77GAg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Task","TodoForm","moment","tasksArray","App","tasksRender","setRender","console","log","addTask","userInput","newTask","title","id","Date","now","check","date","format","push","map","task"],"sources":["/home/user/internship/react/my-app/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport moment from \"moment\";\n\nlet tasksArray = []\n\nfunction App() {\n  const [tasksRender, setRender] = useState([])\n\n  console.log('hj');\n  const addTask = (userInput) => {\n    if(userInput){\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      }\n      tasksArray.push(newTask)\n      setRender([tasksArray])\n      console.log(tasksArray);\n    }\n  }\n\n  return (\n    <main>\n    <h1>ToDo</h1>\n    <TodoForm \n    addTask={addTask}\n    />\n    {tasksRender.map(task => {\n      <Task\n        task={task}\n      />\n    })}\n\n  </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BP,QAAQ,CAAC,EAAD,CAAzC;EAEAQ,OAAO,CAACC,GAAR,CAAY,IAAZ;;EACA,MAAMC,OAAO,GAAIC,SAAD,IAAe;IAC7B,IAAGA,SAAH,EAAa;MACX,MAAMC,OAAO,GAAG;QACdC,KAAK,EAAEF,SADO;QAEdG,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFU;QAGdC,KAAK,EAAE,KAHO;QAIdC,IAAI,EAAEf,MAAM,GAAGgB,MAAT,CAAgB,YAAhB;MAJQ,CAAhB;MAMAf,UAAU,CAACgB,IAAX,CAAgBR,OAAhB;MACAL,SAAS,CAAC,CAACH,UAAD,CAAD,CAAT;MACAI,OAAO,CAACC,GAAR,CAAYL,UAAZ;IACD;EACF,CAZD;;EAcA,oBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,QAAD;MACA,OAAO,EAAEM;IADT;MAAA;MAAA;MAAA;IAAA,QAFA,EAKCJ,WAAW,CAACe,GAAZ,CAAgBC,IAAI,IAAI;MACvB;MAAA,QAAC,IAAD;QACE,IAAI,EAAEA;MADR;QAAA;QAAA;QAAA;MAAA;IAGD,CAJA,CALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAhCQjB,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}