{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport Filters from './Filters';\nimport moment from \"moment\";\nimport { log } from 'console';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet tasksArray = [];\n\nfunction App() {\n  _s();\n\n  const [tasksRender, setRender] = useState([]);\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      };\n      tasksArray.push(newTask);\n      setRender([...tasksRender, newTask]);\n    }\n  };\n\n  const removeTask = id => {\n    tasksArray = tasksArray.filter(task => task.id !== id);\n    setRender(tasksArray);\n  };\n\n  const checkTask = id => {\n    tasksArray.find(task => {\n      if (task.id === id) {\n        task.check = !task.check;\n      }\n    });\n    setRender(tasksArray);\n  };\n\n  const filterAllArray = () => {\n    console.log('array');\n  };\n\n  const filterDoneArray = array => {\n    console.log(array);\n  };\n\n  const filterUnDoneArray = array => {\n    console.log(array);\n  };\n\n  const sortEarlyDate = array => {\n    console.log(array);\n  };\n\n  const sortLastDate = array => {\n    console.log(array);\n  };\n\n  const mainFilter = (filter, sort) => {\n    console.log(filter, ' ', sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      tasksArray: tasksArray,\n      tasksRender: tasksRender,\n      mainFilter: mainFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksBox\",\n      children: tasksRender.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          removeTask: removeTask,\n          checkTask: checkTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wji+YP/l5VmjuzMsQJYzjr77GAg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Task","TodoForm","Filters","moment","log","tasksArray","App","tasksRender","setRender","addTask","userInput","newTask","title","id","Date","now","check","date","format","push","removeTask","filter","task","checkTask","find","filterAllArray","console","filterDoneArray","array","filterUnDoneArray","sortEarlyDate","sortLastDate","mainFilter","sort","map"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport Filters from './Filters';\nimport moment from \"moment\";\nimport { log } from 'console';\n\nlet tasksArray = []\n\nfunction App() {\n  const [tasksRender, setRender] = useState([])\n\n  const addTask = (userInput) => {\n    if(userInput){\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      }\n      tasksArray.push(newTask)\n      setRender([...tasksRender, newTask])\n    }\n  }\n\n  const removeTask = (id) => {\n    tasksArray = tasksArray.filter(task => task.id !== id)\n    setRender(tasksArray)\n  }\n\n  const checkTask = (id) => {\n    tasksArray.find(task => {\n        if (task.id === id){\n          task.check = !task.check\n        }\n      })\n    setRender(tasksArray)\n  }\n\n  const filterAllArray = () => {\n    console.log('array');\n  }\n\n  const filterDoneArray = (array) => {\n      console.log(array);\n  }\n\n  const filterUnDoneArray = (array) => {\n      console.log(array);\n  }\n\n  const sortEarlyDate = (array) => {\n      console.log(array);\n  }\n\n  const sortLastDate = (array) => {\n      console.log(array);\n  }\n\n  const mainFilter = (filter, sort) => {\n    console.log(filter, ' ', sort);\n  }\n\n  return (\n    <main>\n    <h1>ToDo</h1>\n    <TodoForm \n    addTask={addTask}\n    />\n    <Filters\n      tasksArray={tasksArray}\n      tasksRender={tasksRender}\n      mainFilter={mainFilter}\n    />\n    <div className=\"tasksBox\">\n      {tasksRender.map((task) =>{ \n        return(\n          <Task\n            task={task}\n            key={task.id}\n            removeTask = {removeTask}\n            checkTask = {checkTask}\n          />)}\n      )}\n    </div>\n  </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}