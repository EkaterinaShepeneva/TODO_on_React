{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport PagesButton from \"./PagesButton\";\nimport TasksBox from \"./components/TasksBox/TasksBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUM_TASK = 4;\nconst [tasks, setTasks] = useState([]);\n\nfunction App() {\n  _s();\n\n  const [filters, setFilter] = useState(\"filter__all\");\n  const [filtredArray, setFiltredArray] = useState(tasks);\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(\"sort__last\");\n\n  const handleFilter = filter => {\n    setFilter(filter);\n  };\n\n  const handleSort = sort => {\n    setSort(sort);\n  };\n\n  useEffect(() => {\n    switch (filters) {\n      case \"filter__all\":\n        setFiltredArray([...tasks].sort((prev, next) => sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id));\n        break;\n\n      case \"filter__done\":\n        setFiltredArray([...tasks].filter(task => task.check === true).sort((prev, next) => sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id));\n        break;\n\n      default:\n        setFiltredArray([...tasks].filter(task => task.check !== true).sort((prev, next) => sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id));\n        break;\n    }\n  }, [filters, sort, tasks]);\n  useEffect(() => {\n    setPagesCount(Math.ceil(filtredArray.length / 4) || 1);\n  }, [filtredArray, filters, sort]);\n  useEffect(() => {\n    if (page > pagesCount) {\n      setPages(pagesCount);\n    }\n  }, [pagesCount]);\n\n  const handlePage = event => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n\n        setPages(page + 1);\n        break;\n\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n\n        setPages(page - 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const movingOnPages = number => {\n    setPages(number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilter: handleFilter,\n      onSort: handleSort,\n      filters: filters,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n      NUM_TASK: NUM_TASK,\n      page: page,\n      tasks: tasks,\n      setTasks: setTasks,\n      filtredArray: filtredArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), pagesCount > 1 ? /*#__PURE__*/_jsxDEV(PagesButton, {\n      handlePage: handlePage,\n      pagesCount: pagesCount,\n      page: page,\n      movingOnPages: movingOnPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GFvzPRfdJPZUcUrn9ryXyWId4Nk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","TodoForm","Filters","PagesButton","TasksBox","NUM_TASK","tasks","setTasks","App","filters","setFilter","filtredArray","setFiltredArray","page","setPages","pagesCount","setPagesCount","sort","setSort","handleFilter","filter","handleSort","prev","next","id","task","check","Math","ceil","length","handlePage","event","target","className","movingOnPages","number"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport PagesButton from \"./PagesButton\";\n\n\nimport TasksBox from \"./components/TasksBox/TasksBox\";\n\nconst NUM_TASK = 4;\nconst [tasks, setTasks] = useState([]);\n\nfunction App() {\n  \n  \n  const [filters, setFilter] = useState(\"filter__all\");\n  const [filtredArray, setFiltredArray] = useState(tasks);\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(\"sort__last\");\n\n  const handleFilter = (filter) => {\n    setFilter(filter);\n  };\n\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n\n  useEffect(() => {\n    switch (filters) {\n      case \"filter__all\":\n        setFiltredArray(\n          [...tasks].sort((prev, next) =>\n            sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id\n          )\n        );\n        break;\n\n      case \"filter__done\":\n        setFiltredArray(\n          [...tasks]\n            .filter((task) => task.check === true)\n            .sort((prev, next) =>\n              sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id\n            )\n        );\n        break;\n\n      default:\n        setFiltredArray(\n          [...tasks]\n            .filter((task) => task.check !== true)\n            .sort((prev, next) =>\n              sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id\n            )\n        );\n        break;\n    }\n  }, [filters, sort, tasks]);\n\n  useEffect(() => {\n    setPagesCount(Math.ceil(filtredArray.length / 4) || 1);\n  }, [filtredArray, filters, sort]);\n\n  useEffect(() => {\n    if (page > pagesCount) {\n      setPages(pagesCount);\n    }\n  }, [pagesCount]);\n\n  const handlePage = (event) => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n        setPages(page + 1);\n        break;\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n        setPages(page - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const movingOnPages = (number) => {\n    setPages(number);\n  };\n\n\n\n\n\n  return (\n    <main>\n      <h1>ToDo</h1>\n      <TodoForm/>\n      <Filters\n        onFilter={handleFilter}\n        onSort={handleSort}\n        filters={filters}\n        sort={sort}\n      />\n      <TasksBox\n      NUM_TASK={NUM_TASK}\n      page={page}\n      tasks={tasks}\n      setTasks={setTasks}\n      filtredArray={filtredArray}\n      />\n      {(pagesCount>1)? (\n         (\n          <PagesButton\n            handlePage={handlePage}\n            pagesCount={pagesCount}\n            page={page}\n            movingOnPages={movingOnPages}\n          />\n        )\n      ):('')}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}