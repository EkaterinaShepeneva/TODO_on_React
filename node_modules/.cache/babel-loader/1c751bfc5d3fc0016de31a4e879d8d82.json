{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport PagesButton from \"./PagesButton\";\nimport TasksBox from \"./components/TasksBox/TasksBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUM_TASK = 4;\nconst [tasks, setTasks] = useState([]);\n\nfunction App() {\n  _s();\n\n  const [filters, setFilter] = useState(\"filter__all\");\n  const [filtredArray, setFiltredArray] = useState(tasks);\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(\"sort__last\");\n  useEffect(() => {\n    if (page > pagesCount) {\n      setPages(pagesCount);\n    }\n  }, [pagesCount]);\n\n  const handlePage = event => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n\n        setPages(page + 1);\n        break;\n\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n\n        setPages(page - 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const movingOnPages = number => {\n    setPages(number);\n  };\n\n  const validate = val => {\n    if (val === '') {\n      alert('Введите что-нибудь');\n      return false;\n    }\n\n    ;\n    let arrayWord = val.split(' ');\n    let result = true;\n    arrayWord.forEach(item => {\n      if (item.length > 32) {\n        alert('многого хотите, нет такого слова');\n        result = false;\n      }\n    });\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setTasks: setTasks,\n      tasks: tasks,\n      validate: validate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      setFilter: setFilter,\n      setSort: setSort,\n      setFiltredArray: setFiltredArray,\n      setPagesCount: setPagesCount,\n      filters: filters,\n      tasks: tasks,\n      sort: sort,\n      filtredArray: filtredArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n      NUM_TASK: NUM_TASK,\n      page: page,\n      tasks: tasks,\n      setTasks: setTasks,\n      filtredArray: filtredArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), pagesCount > 1 ? /*#__PURE__*/_jsxDEV(PagesButton, {\n      handlePage: handlePage,\n      pagesCount: pagesCount,\n      page: page,\n      movingOnPages: movingOnPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"30NdCTD7On1ttqgpzb1pNjR+L4I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TodoForm","Filters","PagesButton","TasksBox","NUM_TASK","tasks","setTasks","App","filters","setFilter","filtredArray","setFiltredArray","page","setPages","pagesCount","setPagesCount","sort","setSort","handlePage","event","target","className","movingOnPages","number","validate","val","alert","arrayWord","split","result","forEach","item","length"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport PagesButton from \"./PagesButton\";\n\n\nimport TasksBox from \"./components/TasksBox/TasksBox\";\n\nconst NUM_TASK = 4;\nconst [tasks, setTasks] = useState([]);\n\nfunction App() {\n  \n  \n  const [filters, setFilter] = useState(\"filter__all\");\n  const [filtredArray, setFiltredArray] = useState(tasks);\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [sort, setSort] = useState(\"sort__last\");\n\n\n\n  useEffect(() => {\n    if (page > pagesCount) {\n      setPages(pagesCount);\n    }\n  }, [pagesCount]);\n\n  const handlePage = (event) => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n        setPages(page + 1);\n        break;\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n        setPages(page - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const movingOnPages = (number) => {\n    setPages(number);\n  };\n\n  const validate = (val) => {\n    if (val === '') {\n        alert('Введите что-нибудь');\n        return false};\n    let arrayWord = val.split(' ');\n    let result = true;\n\n    arrayWord.forEach(item => {\n        if (item.length > 32) {\n            alert('многого хотите, нет такого слова');\n            result = false;}\n    });\n\n    return result;\n}\n\n  return (\n    <main>\n      <h1>ToDo</h1>\n      <TodoForm\n      setTasks={setTasks}\n      tasks={tasks}\n      validate={validate}\n      />\n      <Filters\n        setFilter={setFilter}\n        setSort={setSort}\n        setFiltredArray={setFiltredArray}\n        setPagesCount={setPagesCount}\n        filters={filters}\n        tasks={tasks}\n        sort={sort}\n        filtredArray={filtredArray}\n      />\n      <TasksBox\n      NUM_TASK={NUM_TASK}\n      page={page}\n      tasks={tasks}\n      setTasks={setTasks}\n      filtredArray={filtredArray}\n      />\n      {(pagesCount>1)? (\n         (\n          <PagesButton\n            handlePage={handlePage}\n            pagesCount={pagesCount}\n            page={page}\n            movingOnPages={movingOnPages}\n          />\n        )\n      ):('')}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,SAASS,GAAT,GAAe;EAAA;;EAGb,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBX,QAAQ,CAAC,aAAD,CAArC;EACA,MAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAACO,KAAD,CAAhD;EACA,MAAM,CAACO,IAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAAC,CAAD,CAAjC;EACA,MAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,YAAD,CAAhC;EAIAC,SAAS,CAAC,MAAM;IACd,IAAIa,IAAI,GAAGE,UAAX,EAAuB;MACrBD,QAAQ,CAACC,UAAD,CAAR;IACD;EACF,CAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;;EAMA,MAAMI,UAAU,GAAIC,KAAD,IAAW;IAC5B,QAAQA,KAAK,CAACC,MAAN,CAAaC,SAArB;MACE,KAAK,qBAAL;QACE,IAAIT,IAAI,KAAKE,UAAb,EAAyB;UACvB;QACD;;QACDD,QAAQ,CAACD,IAAI,GAAG,CAAR,CAAR;QACA;;MACF,KAAK,kBAAL;QACE,IAAIA,IAAI,KAAK,CAAb,EAAgB;UACd;QACD;;QACDC,QAAQ,CAACD,IAAI,GAAG,CAAR,CAAR;QACA;;MACF;QACE;IAdJ;EAgBD,CAjBD;;EAmBA,MAAMU,aAAa,GAAIC,MAAD,IAAY;IAChCV,QAAQ,CAACU,MAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;IACxB,IAAIA,GAAG,KAAK,EAAZ,EAAgB;MACZC,KAAK,CAAC,oBAAD,CAAL;MACA,OAAO,KAAP;IAAa;;IAAA;IACjB,IAAIC,SAAS,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAhB;IACA,IAAIC,MAAM,GAAG,IAAb;IAEAF,SAAS,CAACG,OAAV,CAAkBC,IAAI,IAAI;MACtB,IAAIA,IAAI,CAACC,MAAL,GAAc,EAAlB,EAAsB;QAClBN,KAAK,CAAC,kCAAD,CAAL;QACAG,MAAM,GAAG,KAAT;MAAgB;IACvB,CAJD;IAMA,OAAOA,MAAP;EACH,CAdC;;EAgBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MACA,QAAQ,EAAEvB,QADV;MAEA,KAAK,EAAED,KAFP;MAGA,QAAQ,EAAEmB;IAHV;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,OAAD;MACE,SAAS,EAAEf,SADb;MAEE,OAAO,EAAEQ,OAFX;MAGE,eAAe,EAAEN,eAHnB;MAIE,aAAa,EAAEI,aAJjB;MAKE,OAAO,EAAEP,OALX;MAME,KAAK,EAAEH,KANT;MAOE,IAAI,EAAEW,IAPR;MAQE,YAAY,EAAEN;IARhB;MAAA;MAAA;MAAA;IAAA,QAPF,eAiBE,QAAC,QAAD;MACA,QAAQ,EAAEN,QADV;MAEA,IAAI,EAAEQ,IAFN;MAGA,KAAK,EAAEP,KAHP;MAIA,QAAQ,EAAEC,QAJV;MAKA,YAAY,EAAEI;IALd;MAAA;MAAA;MAAA;IAAA,QAjBF,EAwBII,UAAU,GAAC,CAAZ,gBAEG,QAAC,WAAD;MACE,UAAU,EAAEI,UADd;MAEE,UAAU,EAAEJ,UAFd;MAGE,IAAI,EAAEF,IAHR;MAIE,aAAa,EAAEU;IAJjB;MAAA;MAAA;MAAA;IAAA,QAFH,GASE,EAjCL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD;;GA7FQf,G;;KAAAA,G;AA+FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}