{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport Pagination from \"./Pagination\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const NUM_TASK = 4;\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(\"filter__all\"); //const [statusTask, setstatusTask] = useState(0);\n\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [pagesCountArray, setPagesCountArray] = useState([page]);\n  const [sort, setSort] = useState(\"sort__last\"); // useEffect(() => {\n  //   console.log('use effect');\n  //   setPagesCount((Math.ceil((tasks.length + 1) / 4)) || 1)\n  // }, [filters]);\n\n  const handleFilter = filter => {\n    setFilter(filter);\n  };\n\n  const handleSort = sort => {\n    setSort(sort);\n  };\n\n  const handlePage = event => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n\n        setPages(page + 1);\n        break;\n\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n\n        setPages(page - 1);\n        break;\n\n      default:\n        break;\n    }\n  }; // const pagination = () => {\n  //   let arrayPages = [];\n  //   for (let i = 1; i < pagesCount + 1; i++) {\n  //     arrayPages.push(\n  //       <div\n  //         key={Math.random()}\n  //         className={\n  //           i === page\n  //             ? \"pagination__pages__number activePages\"\n  //             : \"pagination__pages__number\"\n  //         }\n  //       >\n  //         {i}\n  //       </div>\n  //     );\n  //   }\n  //   return arrayPages;\n  // };\n\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      };\n      setTasks(tasks => [...tasks, newTask]);\n    }\n\n    changePagesCount(); //setPagesCount((Math.ceil((tasks.length + 1) / 4)) || 1);\n  };\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id)); //setPagesCount((Math.ceil((tasks.length-1) / 4)) || 1);\n  };\n\n  const changePagesCount = () => {\n    //let count = (Math.ceil((tasks.length) / NUM_TASK))|| 1\n    console.log(Math.ceil(tasks.length / NUM_TASK));\n    setPagesCount(Math.ceil(tasks.length / NUM_TASK) || 1);\n    console.log(pagesCount); // if (count){\n    //   setPagesCount([...pagesCount, count])\n    // }\n    // console.log(pagesCount);\n  };\n\n  const checkTask = task => {\n    task.check = !task.check; // setstatusTask(1)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilter: handleFilter,\n      onSort: handleSort,\n      filters: filters,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksBox\",\n      children: tasks.filter(task => filters === \"filter__all\" ? tasks : filters === \"filter__done\" ? task.check === true : task.check !== true).sort((prev, next) => sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id).slice((page - 1) * NUM_TASK, NUM_TASK * page).map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          removeTask: removeTask,\n          checkTask: checkTask,\n          tasks: tasks,\n          page: page\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination__back\",\n        onClick: event => {\n          handlePage(event);\n        },\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination__pages\",\n        children: pagesCountArray.map(item => {\n          return /*#__PURE__*/_jsxDEV(Pagination, {\n            item: item,\n            page: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pagination__forward\",\n        onClick: event => {\n          handlePage(event);\n        },\n        children: \"forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NazUxjcpcFpOunI9qrzRo21sUjo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","TodoForm","Filters","Pagination","moment","App","NUM_TASK","tasks","setTasks","filters","setFilter","page","setPages","pagesCount","setPagesCount","pagesCountArray","setPagesCountArray","sort","setSort","handleFilter","filter","handleSort","handlePage","event","target","className","addTask","userInput","newTask","title","id","Date","now","check","date","format","changePagesCount","removeTask","task","console","log","Math","ceil","length","checkTask","prev","next","slice","map","item"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Task from \"./Task\";\nimport TodoForm from \"./TodoForm.js\";\nimport Filters from \"./Filters\";\nimport Pagination from \"./Pagination\";\nimport moment from \"moment\";\n\nfunction App() {\n  const NUM_TASK = 4;\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState(\"filter__all\");\n  //const [statusTask, setstatusTask] = useState(0);\n  const [page, setPages] = useState(1);\n  const [pagesCount, setPagesCount] = useState(1);\n  const [pagesCountArray, setPagesCountArray] = useState([page]);\n  const [sort, setSort] = useState(\"sort__last\");\n\n\n  // useEffect(() => {\n  //   console.log('use effect');\n  //   setPagesCount((Math.ceil((tasks.length + 1) / 4)) || 1)\n  // }, [filters]);\n\n  const handleFilter = (filter) => {\n    setFilter(filter);\n  };\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n  const handlePage = (event) => {\n    switch (event.target.className) {\n      case \"pagination__forward\":\n        if (page === pagesCount) {\n          break;\n        }\n        setPages(page + 1);\n        break;\n      case \"pagination__back\":\n        if (page === 1) {\n          break;\n        }\n        setPages(page - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // const pagination = () => {\n  //   let arrayPages = [];\n  //   for (let i = 1; i < pagesCount + 1; i++) {\n  //     arrayPages.push(\n  //       <div\n  //         key={Math.random()}\n  //         className={\n  //           i === page\n  //             ? \"pagination__pages__number activePages\"\n  //             : \"pagination__pages__number\"\n  //         }\n  //       >\n  //         {i}\n  //       </div>\n  //     );\n  //   }\n  //   return arrayPages;\n  // };\n\n  const addTask = (userInput) => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\"),\n      };\n\n      setTasks((tasks) => [...tasks, newTask]);\n    }\n    changePagesCount()\n    //setPagesCount((Math.ceil((tasks.length + 1) / 4)) || 1);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n    //setPagesCount((Math.ceil((tasks.length-1) / 4)) || 1);\n  };\n\n  const changePagesCount = () => {\n    //let count = (Math.ceil((tasks.length) / NUM_TASK))|| 1\n    console.log(Math.ceil(tasks.length / NUM_TASK));\n    setPagesCount(Math.ceil(tasks.length / NUM_TASK)|| 1)\n    console.log(pagesCount);\n    // if (count){\n    //   setPagesCount([...pagesCount, count])\n    // }\n    \n    // console.log(pagesCount);\n  }\n\n  const checkTask = (task) => {\n    (task.check = !task.check)\n   // setstatusTask(1)\n  };\n\n  return (\n    <main>\n      <h1>ToDo</h1>\n      <TodoForm addTask={addTask} />\n      <Filters\n        onFilter={handleFilter}\n        onSort={handleSort}\n        filters={filters}\n        sort={sort}\n      />\n      <div className=\"tasksBox\">\n        {tasks\n          .filter((task) =>\n            filters === \"filter__all\"\n              ? tasks\n              : filters === \"filter__done\"\n              ? task.check === true\n              : task.check !== true\n          )\n          .sort((prev, next) =>\n            sort === \"sort__last\" ? prev.id - next.id : next.id - prev.id\n          )\n          .slice((page - 1) * NUM_TASK, NUM_TASK * page)\n          .map((task) => {\n            return (\n              <Task\n                task={task}\n                key={task.id}\n                removeTask={removeTask}\n                checkTask={checkTask}\n                tasks={tasks}\n                page={page}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"pagination\">\n        <button\n          className=\"pagination__back\"\n          onClick={(event) => {\n            handlePage(event);\n          }}\n        >\n          back\n        </button>\n        <div className=\"pagination__pages\">{pagesCountArray.map((item) => {\n          return (<Pagination \n                  item={item} \n                    page={page}\n                    />)\n        })}</div>\n        <button\n          className=\"pagination__forward\"\n          onClick={(event) => {\n            handlePage(event);\n          }}\n        >\n          forward\n        </button>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}