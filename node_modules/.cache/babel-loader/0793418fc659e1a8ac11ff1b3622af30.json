{"ast":null,"code":"var _jsxFileName = \"/home/user/internship/react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport Filters from './Filters';\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState('filter__all');\n  const [page, setPages] = useState(1);\n  const [sort, setSort] = useState('sort__last');\n\n  const handleFilter = filter => {\n    if (filter === 'filter__done') {\n      setFilter('filter__done');\n    }\n  };\n\n  const handleSort = sort => {\n    if (sort === 'sort__last') {\n      setSort('sort__last');\n    }\n  };\n\n  const handlePage = () => {//set\n  };\n\n  const addTask = userInput => {\n    if (userInput) {\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  const removeTask = id => {// tasksArray = tasksArray.filter(task => task.id !== id)\n    // setTasks(tasksArray)\n  };\n\n  const checkTask = id => {\n    setTasks(tasks.find(task => {\n      if (task.id === id) {\n        task.check = !task.check;\n      }\n    }));\n    console.log(tasks); // tasksArray.find(task => {\n    //     if (task.id === id){\n    //       task.check = !task.check\n    //     }\n    //   })\n    //   setTasks(tasksArray)\n  };\n\n  const filterAllArray = () => setTasks(tasks);\n\n  const filterDoneArray = array => setTasks([...array.filter(task => task.check === true)]);\n\n  const filterUnDoneArray = array => setTasks([...array.filter(task => !task.check === true)]);\n\n  const sortEarlyDate = array => setTasks([...array.sort((prev, next) => next.id - prev.id)]);\n\n  const sortLastDate = array => setTasks([...array.sort((prev, next) => prev.id - next.id)]);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      onFilter: handleFilter,\n      onSort: handleSort,\n      filters: filters,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasksBox\",\n      children: //tasksRender.filter(item => typeof  filter  === 'boolean' ?  item.check === filter : item ).sort((a, b) => ).map((task) =>{ \n      tasks.filter(task => filters === 'filter__all' ? tasks : filters === 'filter__done' ? task.check === true : task.check !== true).sort((prev, next) => prev.id - next.id).map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          removeTask: removeTask,\n          checkTask: checkTask,\n          addTask: addTask\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sNAuhHdrukVNMjMjz/i9bHvFaY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Task","TodoForm","Filters","moment","App","tasks","setTasks","filters","setFilter","page","setPages","sort","setSort","handleFilter","filter","handleSort","handlePage","addTask","userInput","newTask","title","id","Date","now","check","date","format","removeTask","checkTask","find","task","console","log","filterAllArray","filterDoneArray","array","filterUnDoneArray","sortEarlyDate","prev","next","sortLastDate","map"],"sources":["/home/user/internship/react/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport Task from './Task';\nimport TodoForm from './TodoForm.js';\nimport Filters from './Filters';\nimport moment from \"moment\";\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filters, setFilter] = useState('filter__all');\n  const [page, setPages] = useState(1);\n  const [sort, setSort] = useState('sort__last');\n\nconst handleFilter = (filter) => {\n  if(filter === 'filter__done'){\n    setFilter('filter__done')\n  }\n  \n}\nconst handleSort = (sort) => {\n  if(sort === 'sort__last'){\n    setSort('sort__last')\n  }\n};\nconst handlePage = () => {\n  //set\n}\nconst addTask = (userInput) => {\n    if(userInput){\n      const newTask = {\n        title: userInput,\n        id: Date.now(),\n        check: false,\n        date: moment().format(\"DD/MM/YYYY\")\n      }\n\n      setTasks([...tasks, newTask])\n    }\n  }\n\n  const removeTask = (id) => {\n    // tasksArray = tasksArray.filter(task => task.id !== id)\n    // setTasks(tasksArray)\n  }\n\n  const checkTask = (id) => {\n    setTasks(tasks.find(task => {if (task.id === id){task.check = !task.check}}))\n    console.log(tasks);\n    // tasksArray.find(task => {\n    //     if (task.id === id){\n    //       task.check = !task.check\n    //     }\n    //   })\n    //   setTasks(tasksArray)\n  }\n\n  const filterAllArray = () => setTasks(tasks)\n\n  const filterDoneArray = (array) => setTasks([...array.filter(task => task.check === true)])\n\n  const filterUnDoneArray = (array) => setTasks([...array.filter(task => !task.check === true)])\n\n  const sortEarlyDate = (array) => setTasks([...array.sort((prev, next) => next.id - prev.id)])\n\n  const sortLastDate = (array) => setTasks([...array.sort((prev, next) => prev.id - next.id)])\n\n\n\n  return (\n    <main>\n    <h1>ToDo</h1>\n    <TodoForm \n    addTask={addTask}\n    />\n    <Filters\n    onFilter={handleFilter}\n    onSort={handleSort}\n    filters={filters}\n    sort={sort}\n\n    />\n    <div className=\"tasksBox\">\n      {//tasksRender.filter(item => typeof  filter  === 'boolean' ?  item.check === filter : item ).sort((a, b) => ).map((task) =>{ \n        tasks.filter(task => filters === 'filter__all' ? (tasks):(filters === 'filter__done' ? (task.check === true):(task.check !== true))).sort((prev, next) => prev.id - next.id).map((task) =>{ \n        return(\n          <Task\n            task={task}\n            key={task.id}\n            removeTask = {removeTask}\n            checkTask = {checkTask}\n            addTask={addTask}\n          />)}\n      )}\n    </div>\n  </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}